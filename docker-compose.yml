## Environment NODE
version: "3"
services:

## SERVER PUBLIC ##
  environment-public:
    container_name: ${HOSTNAME}-public
    image: ${HOSTNAME}-public
    hostname: ${HOSTNAME}-public
    labels:
      description: ${HOSTNAME}-public
    build: 
      context: ./
      dockerfile: Dockerfile
      target: by-codes-tec-public
    volumes:
      - .:/usr/${HOSTNAME}
      - local-volume:/usr/${HOSTNAME}/*
    env_file:
      - ./.env
    environment:
      NODE_ENV: development
    command: npm run dev:public
    networks:
      - local-network
    restart: always
    ports:
      - ${PUBLIC_PORT}:${PUBLIC_PORT}

## SERVER PUBLIC ##
  environment-api:
    container_name: ${HOSTNAME}-api
    image: ${HOSTNAME}-api
    hostname: ${HOSTNAME}-api
    labels:
      description: ${HOSTNAME}-api
    build: 
      context: ./
      dockerfile: Dockerfile
      target: by-codes-tec-api
    volumes:
      - .:/usr/${HOSTNAME}
      - local-volume:/usr/${HOSTNAME}/*
    env_file:
      - ./.env
    environment:
      NODE_ENV: development
    command: npm run dev:api
    networks:
      - local-network
    restart: always
    ports:
      - ${API_PORT}:${API_PORT}
  
## SERVER MYSQL ##
  db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - ./data:/var/lib/mysql
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: ${HOSTNAME}
      MYSQL_PASSWORD: "Alterar123"
      MYSQL_USER: "development"
    
    ports:
      - 3306:3306
volumes:
  local-volume:
    name: ${HOSTNAME}-volume
  local-mysql:
    name: ${HOSTNAME}-mysql
networks:
  local-network:
    name: ${HOSTNAME}-network
    driver: bridge
  local-mysql:
    name: ${HOSTNAME}-mysql
    driver: bridge
